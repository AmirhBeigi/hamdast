/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bE9NMB942w5e6uFrcCxfJN
// Component: S7QID4Zn_0WI

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Button from "../../Button"; // plasmic-import: _T6T2fNvkUfo/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: bE9NMB942w5e6uFrcCxfJN/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: bE9NMB942w5e6uFrcCxfJN/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: bE9NMB942w5e6uFrcCxfJN/projectcss
import sty from "./PlasmicLanding.module.css"; // plasmic-import: S7QID4Zn_0WI/css

import Icon51Icon from "./icons/PlasmicIcon__Icon51"; // plasmic-import: wMmAYe1Ji-cY/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: VepSFu0Y3Pyk/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: CmW94FEF71d7/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: UuDHOUXMn1lI/icon

createPlasmicElementProxy;

export type PlasmicLanding__VariantMembers = {};
export type PlasmicLanding__VariantsArgs = {};
type VariantPropType = keyof PlasmicLanding__VariantsArgs;
export const PlasmicLanding__VariantProps = new Array<VariantPropType>();

export type PlasmicLanding__ArgsType = {};
type ArgPropType = keyof PlasmicLanding__ArgsType;
export const PlasmicLanding__ArgProps = new Array<ArgPropType>();

export type PlasmicLanding__OverridesType = {
  root?: Flex__<"div">;
};

export interface DefaultLandingProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLanding__RenderFunc(props: {
  variants: PlasmicLanding__VariantsArgs;
  args: PlasmicLanding__ArgsType;
  overrides: PlasmicLanding__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = _useGlobalVariants();

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "features",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicLanding.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicLanding.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicLanding.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root
          )}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__pr2Qf)}
            dir={"rtl"}
          >
            <div className={classNames(projectcss.all, sty.freeBox__bDspl)}>
              <div className={classNames(projectcss.all, sty.freeBox__w6NcI)}>
                <div className={classNames(projectcss.all, sty.freeBox__la0Sl)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ypiuh
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    <Icon51Icon
                      className={classNames(projectcss.all, sty.svg___1B5M5)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__s4X6O
                      )}
                    >
                      {"\u0647\u0645\u062f\u0633\u062a"}
                    </div>
                  </PlasmicLink__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rdoli)}
                  >
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__uLgo0
                      )}
                      component={Link}
                      href={"https://developers.paziresh24.com/apps"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {"\u0645\u0633\u062a\u0646\u062f\u0627\u062a"}
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__enRrO
                      )}
                      component={Link}
                      href={"https://developers.paziresh24.com/apps"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {
                        "\u0646\u06cc\u0627\u0632 \u0628\u0647 \u0631\u0627\u0647\u200c\u0646\u0645\u0627\u06cc\u06cc \u062f\u0627\u0631\u06cc\u062f\u061f"
                      }
                    </PlasmicLink__>
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button___3EXjU)}
                    color={"white"}
                    link={`/login`}
                    shape={"rounded"}
                    size={"compact"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sg2Xr
                      )}
                    >
                      {
                        "\u067e\u0646\u0644 \u062a\u0648\u0633\u0639\u0647 \u062f\u0647\u0646\u062f\u06af\u0627\u0646"
                      }
                    </div>
                  </Button>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__lBXie)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__oqWxR)}
                    direction={"up"}
                    triggerOnce={true}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wysfY)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dn4Ue
                        )}
                      >
                        {
                          "\u0633\u0627\u062e\u062a \u0645\u062d\u0635\u0648\u0644\u0627\u062a \u062f\u0631 \u062d\u0648\u0632\u0647 \u0633\u0644\u0627\u0645\u062a"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__paAyx
                        )}
                      >
                        {
                          "\u062c\u0627\u06cc\u06cc \u06a9\u0647 \u0628\u0627 \u062d\u0644 \u0645\u0634\u06a9\u0644\u0627\u062a \u0634\u0645\u0627 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0633\u0644\u0627\u0645\u062a \u0645\u06cc\u0644\u06cc\u0648\u0646\u200c\u0647\u0627 \u0646\u0641\u0631 \u0631\u0627 \u0645\u062a\u062d\u0648\u0644 \u06a9\u0646\u06cc\u062f.\r"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___72XQz
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__d2DuQ
                          )}
                          color={"white"}
                          link={
                            "https://developers.paziresh24.com/apps/getting-started"
                          }
                          shape={"rounded"}
                          size={"compact"}
                          target={false}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bqKvk
                            )}
                          >
                            {
                              "\u0634\u0631\u0648\u0639 \u0633\u0627\u062e\u062a\u0646"
                            }
                          </div>
                        </Button>
                      </div>
                    </div>
                  </Reveal>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__m6Bdl)}
                    direction={"up"}
                    triggerOnce={true}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vhHiw)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__rOcrt)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/hamdast/images/image8.png",
                          fullWidth: 1536,
                          fullHeight: 1024,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </Reveal>
                </div>
              </div>
            </div>
            <Reveal
              className={classNames("__wab_instance", sty.reveal__aiwYy)}
              direction={"up"}
              effect={"fade"}
              triggerOnce={true}
            >
              <div className={classNames(projectcss.all, sty.freeBox___2Azhv)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2QaW7
                  )}
                >
                  {
                    "\u0647\u0645\u062f\u0633\u062a \u0686\u0647 \u06a9\u0645\u06a9\u06cc \u0628\u0647 \u0645\u0646 \u0645\u06cc\u200c\u06a9\u0646\u062f\u061f"
                  }
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__igNzo)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__eyBrG)}
                  >
                    {(_par =>
                      !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                      (() => {
                        try {
                          return [
                            {
                              name: "دسترسی به داده‌ها",
                              key: 0
                            },
                            {
                              name: "درگاه پرداخت",
                              key: 1
                            },
                            {
                              name: "سفارشی سازی پروفایل پزشک",
                              key: 2
                            },
                            {
                              name: "انتشار به کاربران",
                              key: 3
                            }
                          ];
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    ).map((__plasmic_item_0, __plasmic_idx_0) => {
                      const currentItem = __plasmic_item_0;
                      const currentIndex = __plasmic_idx_0;
                      return (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jbnIv
                          )}
                          key={currentIndex}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eXh10
                            )}
                            style={(() => {
                              try {
                                return $state.features == currentItem.key
                                  ? {
                                      background: "#3861FB"
                                    }
                                  : {};
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__estve
                            )}
                            onClick={async event => {
                              const $steps = {};

                              $steps["updateFeatures"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["features"]
                                      },
                                      operation: 0,
                                      value: currentItem.key
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateFeatures"] != null &&
                                typeof $steps["updateFeatures"] === "object" &&
                                typeof $steps["updateFeatures"].then ===
                                  "function"
                              ) {
                                $steps["updateFeatures"] = await $steps[
                                  "updateFeatures"
                                ];
                              }
                            }}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__vtl0P
                              )}
                              style={(() => {
                                try {
                                  return $state.features == currentItem.key
                                    ? {
                                        color: "#3861FB"
                                      }
                                    : {};
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.name;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "\u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u062f\u0627\u062f\u0647 \u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                          </div>
                        </div>
                      );
                    })}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wDq9P)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jbzqY)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7JntB
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return [
                                "دسترسی به داده های بیماران و پزشکان",

                                "پرداخت ساده از طریق کیف پول پذیرش۲۴",
                                "افزودن بخش جدید به پروفایل عمومی پزشک",
                                "انتشار محصول خود برای کاربران پذیرش۲۴"
                              ][$state.features];
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "\u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u062f\u0627\u062f\u0647 \u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7WJtB
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return [
                                "از داده های پزشکان و بیماران در محصول خود استفاده کنید یا داده های آن ها را گسترش دهید.",
                                "درگاه پرداخت پذیرش۲۴ تمام مراحل صدور صورتحساب و پردازش پرداخت‌ها را برای شما مدیریت می‌کند. این موضوع موجب کاهش پیچیدگی‌ها و دردسرهای مربوط به این فرآیندها می‌شود و به شما فرصت می‌دهد تا بیشتر روی ساخت و بهبود محصول خود تمرکز کنید.\nیکی از مزیت‌های مهم این سرویس، ارتباط مستقیم آن با کیف پول کاربران است، که روند پرداخت را سریع و راحت می‌سازد.",
                                "سفارشی سازی بخش های مختلف وب سایت مانند پروفایل عمومی پزشک و پنل پزشکان",
                                "انتشار ابزارک برای پزشکان پذیرش۲۴ و شروع سریع کسب درآمد"
                              ][$state.features];
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "\u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u062f\u0627\u062f\u0647 \u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__l8V4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__x6VSl
                          )}
                        >
                          {
                            "\u0628\u06cc\u0634\u062a\u0631 \u0628\u062f\u0627\u0646\u06cc\u062f"
                          }
                        </div>
                        <Icon2Icon
                          className={classNames(projectcss.all, sty.svg__pW8A3)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </Reveal>
            <Reveal
              className={classNames("__wab_instance", sty.reveal__acYn4)}
              direction={"up"}
              triggerOnce={true}
            >
              <div className={classNames(projectcss.all, sty.freeBox___3Orxe)}>
                <div className={classNames(projectcss.all, sty.freeBox__vOehZ)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d8TPb
                    )}
                  >
                    {
                      "\u0627\u0628\u0632\u0627\u0631\u06a9\u200c\u0647\u0627\u06cc \u0633\u0627\u062e\u062a\u0647 \u0634\u062f\u0647"
                    }
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___8NTyo)}
                  >
                    {(_par =>
                      !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                      (() => {
                        try {
                          return [
                            {
                              image:
                                "https://hamdast.s3.ir-thr-at1.arvanstorage.ir/apps%2Fcywoc24.png?versionId=",
                              name: "پروفایل اینستاگرام",
                              description:
                                "افزودن پست های اینستاگرام به پروفایل پزشک",
                              app: "cywoc24"
                            },
                            {
                              image:
                                "https://hamdast.s3.ir-thr-at1.arvanstorage.ir/apps%2Fbimehnama.png?versionId=",
                              name: "بیمه‌نما",
                              description:
                                "افزودن بیمه های پایه و تکمیلی به پروفایل",
                              app: "bimehnama"
                            },
                            {
                              image:
                                "https://hamdast.s3.ir-thr-at1.arvanstorage.ir/apps%2Fcheragh.png?versionId=",
                              name: "چراغ",
                              description:
                                "ثبت و نمایش وضعیت امکانات مطب از جمله جای پارک، پله، آسانسور و سایر دسترسی‌ها",
                              app: "cheragh"
                            },
                            {
                              image:
                                "https://hamdast.s3.ir-thr-at1.arvanstorage.ir/apps%2Fhamyar.png?versionId=",
                              name: "همیار",
                              description:
                                "بیماران قادر هستند در زمان فعال بودن ابزارک، بدون مشاهده شماره منشی با منشی تماس امن بگیرند",
                              app: "hamyar"
                            },
                            {
                              image:
                                "https://hamdast.s3.ir-thr-at1.arvanstorage.ir/apps%2Frahnama.png?versionId=",
                              name: "راه‌نما",
                              description:
                                "لینک شبکه‌های اجتماعی‌تان (اینستاگرام، ایکس، اپارات) را به سادگی در پروفایل‌تان قرار دهید",
                              app: "rahnama"
                            },
                            {
                              image:
                                "https://hamdast.s3.ir-thr-at1.arvanstorage.ir/apps%2Fnotification.png?versionId=",
                              name: "ارسال پیامک",
                              description:
                                "ارسال اطلاع رسانی ها براساس رویدادهای مخلتف",
                              app: "notification"
                            },
                            {
                              image:
                                "https://hamdast.s3.ir-thr-at1.arvanstorage.ir/apps%2Fgooglefastindex.png?versionId=",
                              name: "گوگلم آپدیت نیست!",
                              description:
                                "ابزارک درخواست آپدیت پروفایل به گوگل",
                              app: "googlefastindex"
                            }
                          ];
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    ).map((__plasmic_item_0, __plasmic_idx_0) => {
                      const currentItem = __plasmic_item_0;
                      const currentIndex = __plasmic_idx_0;
                      return (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ouvdb
                          )}
                          key={currentIndex}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__kvJkg)}
                            displayHeight={"50px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"50px"}
                            loading={"lazy"}
                            src={(() => {
                              try {
                                return currentItem.image;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___6Ber
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__y5JbF
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.name;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "\u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u062f\u0627\u062f\u0647 \u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___9KghR
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.description;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "\u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u062f\u0627\u062f\u0647 \u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                          </div>
                        </div>
                      );
                    })}
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dfM3F)}
                      onClick={async event => {
                        const $steps = {};

                        $steps[
                          "goToHttpsDevelopersPaziresh24ComAppsGettingStarted"
                        ] = true
                          ? (() => {
                              const actionArgs = {
                                destination:
                                  "https://developers.paziresh24.com/apps/getting-started"
                              };
                              return (({ destination }) => {
                                if (
                                  typeof destination === "string" &&
                                  destination.startsWith("#")
                                ) {
                                  document
                                    .getElementById(destination.substr(1))
                                    .scrollIntoView({ behavior: "smooth" });
                                } else {
                                  __nextRouter?.push(destination);
                                }
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps[
                            "goToHttpsDevelopersPaziresh24ComAppsGettingStarted"
                          ] != null &&
                          typeof $steps[
                            "goToHttpsDevelopersPaziresh24ComAppsGettingStarted"
                          ] === "object" &&
                          typeof $steps[
                            "goToHttpsDevelopersPaziresh24ComAppsGettingStarted"
                          ].then === "function"
                        ) {
                          $steps[
                            "goToHttpsDevelopersPaziresh24ComAppsGettingStarted"
                          ] = await $steps[
                            "goToHttpsDevelopersPaziresh24ComAppsGettingStarted"
                          ];
                        }
                      }}
                    >
                      <Icon21Icon
                        className={classNames(projectcss.all, sty.svg__bITZ)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__k589
                        )}
                      >
                        {
                          "\u0627\u0628\u0632\u0627\u0631\u06a9 \u0634\u0645\u0627"
                        }
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </Reveal>
            <Reveal
              className={classNames("__wab_instance", sty.reveal___4Baqk)}
              direction={"up"}
              triggerOnce={true}
            >
              <div className={classNames(projectcss.all, sty.freeBox__hy0D)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ph753
                  )}
                >
                  {
                    "\u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4\u060c \u062f\u0631 \u062d\u0627\u0644 \u06af\u0633\u062a\u0631\u0634 \u0648 \u0634\u0645\u0627 \u0647\u0645 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0628\u062e\u0634\u06cc \u0627\u0632 \u0627\u06cc\u0646 \u0631\u0634\u062f \u0628\u0627\u0634\u06cc\u062f"
                  }
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__t4GaP)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ycb5M)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ycrDk
                      )}
                    >
                      {"+\u06f1\u06f7 \u0645\u06cc\u0644\u06cc\u0648\u0646"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gHdzp
                      )}
                    >
                      {
                        "\u06a9\u0627\u0631\u0628\u0631 \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__luVcJ)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6NYZs
                      )}
                    >
                      {"+\u06f3\u06f4\u06f0 \u0647\u0632\u0627\u0631"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dw1Gc
                      )}
                    >
                      {
                        "\u0633\u0631\u0648\u06cc\u0633 \u062f\u0647\u0646\u062f\u0647 \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4"
                      }
                    </div>
                  </div>
                </div>
              </div>
            </Reveal>
            <Reveal
              className={classNames("__wab_instance", sty.reveal__bXkJl)}
              direction={"up"}
              triggerOnce={true}
            >
              <div className={classNames(projectcss.all, sty.freeBox__h117M)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__vqiyG)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"40px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/hamdast/images/image9.svg",
                    fullWidth: 102.473,
                    fullHeight: 108.85,
                    aspectRatio: 0.941415
                  }}
                />
              </div>
            </Reveal>
            <div className={classNames(projectcss.all, sty.freeBox__hbzZs)}>
              <div className={classNames(projectcss.all, sty.freeBox__trY8L)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___5K09F)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"300px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/hamdast/images/frame73Png.png",
                    fullWidth: 1349,
                    fullHeight: 1253,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___93M3A)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__anXZ
                  )}
                >
                  {"\u0627\u062d\u0631\u0627\u0632 \u0647\u0648\u06cc\u062a"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mEqLi
                  )}
                >
                  {
                    "\u0641\u0631\u0627\u06cc\u0646\u062f \u0627\u062d\u0631\u0627\u0632 \u0647\u0648\u06cc\u062a \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0631\u0627 \u0628\u0647 \u0633\u0627\u062f\u0647\u200c\u062a\u0631\u06cc\u0646 \u0634\u06a9\u0644 \u062f\u0631 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u062e\u0648\u062f \u067e\u06cc\u0627\u062f\u0647\u200c\u0633\u0627\u0632\u06cc \u06a9\u0646\u06cc\u062f. \u0627\u06cc\u0646 \u0627\u0628\u0632\u0627\u0631 \u0628\u0647 \u0634\u0645\u0627 \u0627\u0645\u06a9\u0627\u0646 \u0645\u06cc\u200c\u062f\u0647\u062f \u062a\u0627 \u0628\u062f\u0648\u0646 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0635\u0631\u0641 \u0632\u0645\u0627\u0646 \u0628\u0631\u0627\u06cc \u062a\u0648\u0633\u0639\u0647 \u0632\u06cc\u0631\u0633\u0627\u062e\u062a\u200c\u0647\u0627\u06cc \u067e\u06cc\u0686\u06cc\u062f\u0647\u060c \u0648\u0631\u0648\u062f \u0627\u06cc\u0645\u0646 \u0648 \u0633\u0631\u06cc\u0639 \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0631\u0627 \u0641\u0631\u0627\u0647\u0645 \u06a9\u0646\u06cc\u062f."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vGeZv
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__p5Q6R
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___2TjQb
                          )}
                        >
                          {
                            "\u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647 \u0628\u0631\u0627\u06cc \u0627\u0641\u0632\u0627\u06cc\u0634 \u0627\u0645\u0646\u06cc\u062a \u0648 \u0627\u0639\u062a\u0645\u0627\u062f"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__co6QQ
                          )}
                        >
                          {
                            "\u0633\u0627\u0632\u06af\u0627\u0631 \u0628\u0627 \u0646\u06cc\u0627\u0632\u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646\u200c\u0647\u0627"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__cKnuh
                          )}
                        >
                          {
                            "\u0642\u0627\u0628\u0644\u06cc\u062a \u067e\u06cc\u0627\u062f\u0647\u200c\u0633\u0627\u0632\u06cc \u0622\u0633\u0627\u0646 \u0648 \u0633\u0631\u06cc\u0639"
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___9MrEt)}>
              <div className={classNames(projectcss.all, sty.freeBox__sj5Bn)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cAhBt
                  )}
                >
                  {"\u067e\u0631\u062f\u0627\u062e\u062a"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cSw4S
                  )}
                >
                  {
                    "\u0641\u0631\u0627\u06cc\u0646\u062f \u067e\u0631\u062f\u0627\u062e\u062a \u062f\u0631 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u062e\u0648\u062f \u0631\u0627 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u0628\u0632\u0627\u0631 \u067e\u0631\u062f\u0627\u062e\u062a \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4 \u0633\u0627\u062f\u0647 \u0648 \u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 \u06a9\u0646\u06cc\u062f. \u0627\u06cc\u0646 \u0631\u0627\u0647\u06a9\u0627\u0631 \u0628\u0647 \u0634\u0645\u0627 \u0627\u0645\u06a9\u0627\u0646 \u0645\u06cc\u200c\u062f\u0647\u062f \u062a\u0627 \u062a\u062c\u0631\u0628\u0647\u200c\u0627\u06cc \u0631\u0648\u0627\u0646 \u0648 \u0627\u0645\u0646 \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u062e\u0648\u062f \u0641\u0631\u0627\u0647\u0645 \u06a9\u0646\u06cc\u062f \u0648 \u0645\u062f\u06cc\u0631\u06cc\u062a \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627 \u0631\u0627 \u0628\u062f\u0648\u0646 \u062f\u063a\u062f\u063a\u0647 \u0627\u0646\u062c\u0627\u0645 \u062f\u0647\u06cc\u062f."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__b7Aqu
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__tKiTf
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__tylYb
                          )}
                        >
                          {
                            "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 \u067e\u0631\u062f\u0627\u062e\u062a\u200c\u0647\u0627\u06cc \u0622\u0646\u0644\u0627\u06cc\u0646 \u0648 \u06a9\u06cc\u0641 \u067e\u0648\u0644"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__zh0Ip
                          )}
                        >
                          {
                            "\u06af\u0632\u0627\u0631\u0634\u200c\u06af\u06cc\u0631\u06cc \u06a9\u0627\u0645\u0644 \u0627\u0632 \u0648\u0636\u0639\u06cc\u062a \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__dr2WC
                          )}
                        >
                          {
                            "\u067e\u06cc\u0627\u062f\u0647\u200c\u0633\u0627\u0632\u06cc \u0622\u0633\u0627\u0646 \u062f\u0631 \u0686\u0646\u062f \u0645\u0631\u062d\u0644\u0647"
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__yfahr)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___4Kkhg)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"300px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/hamdast/images/frame74Png.png",
                    fullWidth: 1349,
                    fullHeight: 1253,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLanding__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLanding__VariantsArgs;
    args?: PlasmicLanding__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLanding__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLanding__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLanding__ArgProps,
          internalVariantPropNames: PlasmicLanding__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLanding__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLanding";
  } else {
    func.displayName = `PlasmicLanding.${nodeName}`;
  }
  return func;
}

export const PlasmicLanding = Object.assign(
  // Top-level PlasmicLanding renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicLanding
    internalVariantProps: PlasmicLanding__VariantProps,
    internalArgProps: PlasmicLanding__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "همدست - توسعه و یکپارچه سازی کسب و کار با پذیرش۲۴",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicLanding;
/* prettier-ignore-end */
