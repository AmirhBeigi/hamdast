// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bE9NMB942w5e6uFrcCxfJN
// Component: ANnvdUMqEs3c

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Button from "../../Button"; // plasmic-import: _T6T2fNvkUfo/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: bE9NMB942w5e6uFrcCxfJN/projectcss
import sty from "./PlasmicIntegrations.module.css"; // plasmic-import: ANnvdUMqEs3c/css

import Icon27Icon from "./icons/PlasmicIcon__Icon27"; // plasmic-import: 0E0-Td2sxrpd/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: VepSFu0Y3Pyk/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: CmW94FEF71d7/icon

createPlasmicElementProxy;

export type PlasmicIntegrations__VariantMembers = {};
export type PlasmicIntegrations__VariantsArgs = {};
type VariantPropType = keyof PlasmicIntegrations__VariantsArgs;
export const PlasmicIntegrations__VariantProps = new Array<VariantPropType>();

export type PlasmicIntegrations__ArgsType = {};
type ArgPropType = keyof PlasmicIntegrations__ArgsType;
export const PlasmicIntegrations__ArgProps = new Array<ArgPropType>();

export type PlasmicIntegrations__OverridesType = {
  root?: Flex__<"div">;
  svg?: Flex__<"svg">;
  button?: Flex__<typeof Button>;
};

export interface DefaultIntegrationsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicIntegrations__RenderFunc(props: {
  variants: PlasmicIntegrations__VariantsArgs;
  args: PlasmicIntegrations__ArgsType;
  overrides: PlasmicIntegrations__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicIntegrations.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicIntegrations.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicIntegrations.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
          dir={"rtl"}
        >
          <div className={classNames(projectcss.all, sty.freeBox__kfWCe)}>
            <Stack__
              as={PlasmicLink__}
              hasGap={true}
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link___7Obi4
              )}
              component={Link}
              href={`/`}
              platform={"nextjs"}
            >
              <Icon27Icon
                data-plasmic-name={"svg"}
                data-plasmic-override={overrides.svg}
                className={classNames(projectcss.all, sty.svg)}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nbMOr
                )}
              >
                {"\u0647\u0645\u062f\u0633\u062a"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__uiToj)}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link___8NvHh
                )}
                component={Link}
                href={"https://developers.paziresh24.com/apps"}
                platform={"nextjs"}
                target={"_blank"}
              >
                {"\u0645\u0633\u062a\u0646\u062f\u0627\u062a"}
              </PlasmicLink__>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__ssFx
                )}
                component={Link}
                href={`/integrations`}
                platform={"nextjs"}
              >
                {"\u0627\u062f\u063a\u0627\u0645 \u0647\u0627"}
              </PlasmicLink__>
            </Stack__>
            <Button
              data-plasmic-name={"button"}
              data-plasmic-override={overrides.button}
              className={classNames("__wab_instance", sty.button)}
              link={`/login`}
              shape={"rounded"}
              size={"compact"}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__r3EsJ
                )}
              >
                {
                  "\u067e\u0646\u0644 \u062a\u0648\u0633\u0639\u0647 \u062f\u0647\u0646\u062f\u06af\u0627\u0646"
                }
              </div>
            </Button>
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__iUiJ)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jdWz
              )}
            >
              {
                "\u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 \u0633\u0627\u0632\u06cc \u0647\u0627"
              }
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mkaeY
              )}
            >
              {
                " \u062a\u0646\u0647\u0627 \u0631\u0648\u06cc \u062a\u0648\u0633\u0639\u0647\u200c\u06cc \u0645\u062d\u0635\u0648\u0644 \u0648 \u06a9\u0633\u0628\u200c\u0648\u06a9\u0627\u0631\u062a\u0627\u0646 \u062a\u0645\u0631\u06a9\u0632 \u06a9\u0646\u06cc\u062f."
              }
            </div>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__dIrj)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kdCbg)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__oLhUj)}
                displayHeight={"40px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"40px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/hamdast/images/logoPng.png",
                  fullWidth: 521,
                  fullHeight: 458,
                  aspectRatio: undefined
                }}
              />

              <div className={classNames(projectcss.all, sty.freeBox___0B6Zx)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vgBw
                  )}
                >
                  {"\u06af\u0630\u0631\u06af\u0627\u0647"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p4KNh
                  )}
                >
                  {
                    "\u0627\u062d\u0631\u0627\u0632\u0647\u0648\u06cc\u062a \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4"
                  }
                </div>
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__chDa5)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__huFox
                )}
              >
                {"\u06a9\u062a\u06cc\u0628\u0647"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cRMtH
                )}
              >
                {
                  "\u0627\u06cc\u062c\u0627\u062f \u0635\u0648\u0631\u062a \u062d\u0633\u0627\u0628 \u0648 \u067e\u0631\u062f\u0627\u062e\u062a"
                }
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__bwd)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___5FTeV)}
                displayHeight={"40px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"40px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/hamdast/images/najva125125Png.png",
                  fullWidth: 125,
                  fullHeight: 125,
                  aspectRatio: undefined
                }}
              />

              <div className={classNames(projectcss.all, sty.freeBox__gxElR)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mbFvv
                  )}
                >
                  {"\u0646\u062c\u0648\u0627"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iaquW
                  )}
                >
                  {
                    "\u0627\u0631\u0633\u0627\u0644 \u067e\u0648\u0634 \u0646\u0648\u062a\u06cc\u0641\u06cc\u06a9\u0634\u0646"
                  }
                </div>
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__s3OIy)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___5FVrU)}
                displayHeight={"40px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"40px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/hamdast/images/_4C5D8A25714Def303Ef66Ff369428BcfSvg.svg",
                  fullWidth: 48,
                  fullHeight: 48,
                  aspectRatio: 1
                }}
              />

              <div className={classNames(projectcss.all, sty.freeBox__aYhku)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r3Aek
                  )}
                >
                  {"\u067e\u0644\u0632\u0645\u06cc\u06a9"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y677M
                  )}
                >
                  {
                    "\u062a\u0648\u0633\u0639\u0647 \u0641\u0631\u0627\u0646\u062a\u200c\u0627\u0646\u062f \u0627\u0628\u0632\u0627\u0631\u06a9"
                  }
                </div>
              </div>
            </Stack__>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "svg", "button"],
  svg: ["svg"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  svg: "svg";
  button: typeof Button;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicIntegrations__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicIntegrations__VariantsArgs;
    args?: PlasmicIntegrations__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicIntegrations__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicIntegrations__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicIntegrations__ArgProps,
          internalVariantPropNames: PlasmicIntegrations__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicIntegrations__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicIntegrations";
  } else {
    func.displayName = `PlasmicIntegrations.${nodeName}`;
  }
  return func;
}

export const PlasmicIntegrations = Object.assign(
  // Top-level PlasmicIntegrations renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    svg: makeNodeComponent("svg"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicIntegrations
    internalVariantProps: PlasmicIntegrations__VariantProps,
    internalArgProps: PlasmicIntegrations__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "یکپارچه سازی ها",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicIntegrations;
/* prettier-ignore-end */
